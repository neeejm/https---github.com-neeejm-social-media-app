plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "6.5.1"
    id 'jacoco'
    id "org.sonarqube" version "3.4.0.2513"
    id "co.uzzu.dotenv.gradle" version "2.0.0"
    id "com.diffplug.spotless" version "6.11.0"
}

group = 'com.neeejm'
version = '0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // others
    implementation 'org.modelmapper:modelmapper:3.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
springBoot {
    buildInfo()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact bootJar
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

task unitTest(type: Test) {
    exclude '**/*IntegrationTests*'
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

task integrationTest(type: Test) {
    include '**/*IntegrationTests*'
    useJUnitPlatform()
}

jacocoTestReport {
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/unitTest.exec"))

    dependsOn unitTest

    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
    property "sonar.projectKey", "neeejm_social-media-app"
    property "sonar.organization", "neeejm"
    property "sonar.login", env.SONAR_TOKEN.value
    property "sonar.host.url", "https://sonarcloud.io"
    // property "sonar.sources", "src/main"
    // property "sonar.test", "src/test"
    property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

spotless {
    java {
        googleJavaFormat()
    }
}